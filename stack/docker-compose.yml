services:

  zeebe:
    image: camunda/zeebe:8.5.1
    container_name: zeebe
    ports:
      - "26500:26500"
      - "9600:9600"
    environment:
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      # allow running with low disk space
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
      - ZEEBE_AUTHENTICATION_MODE=none
      - ZEEBE_CLIENT_ID=zeebe
      - ZEEBE_CLIENT_SECRET=zecret
      - JAVA_OPTIONS=-Xmx8192m
    restart: always
    #volumes:
    #  - .data/zeebe:/usr/local/zeebe/data
    networks:
      - internal
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: zeebe-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 5s
      retries: 30
    networks:
      - internal

  postgres:
    image: postgres:15.3
    container_name: postgres
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${TM_DATASOURCE_DB},${ORDER_DATASOURCE_DB},${PYMT_DATASOURCE_DB}
      - POSTGRES_USER=${LOCAL_DATASOURCE_USER}
      - POSTGRES_PASSWORD=${LOCAL_DATASOURCE_PASSWORD}
    networks:
      - internal

  nginx:
    image: nginx:1.24.0
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    ports:
      - "8081:8080"
#     extra_hosts:
#       - "host.docker.internal:host-gateway"
    depends_on:
      taskmanager:
        condition: service_healthy
      order-process:
        condition: service_healthy
    profiles:
      - prod
    networks:
      - internal

  tasklist:
    container_name: tasklist
    build:
      context: ../../tasklist
    ports:
      - "3000:8080"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    profiles:
      - prod
    depends_on:
      - taskmanager
    networks:
      - internal

  taskmanager:
    container_name: taskmanager
    build:
      context: ../taskmanager
    ports:
      - "9100:9100"
    restart: unless-stopped
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:9100/actuator/health || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      - ZEEBE_BASE_URL=http://zeebe:26500
      - JDBC_BASE_URL=jdbc:postgresql://postgres:5432/${TM_DATASOURCE_DB}
    profiles:
      - prod
    depends_on:
      - zeebe
      - postgres
    networks:
      - internal

  order-process:
    container_name: order-process
    build:
      context: ../processes/order
    ports:
      - "9101:9101"
    restart: unless-stopped
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:9101/actuator/health || exit 1"
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
    environment:
      - ZEEBE_BASE_URL=http://zeebe:26500
      - JDBC_BASE_URL=jdbc:postgresql://postgres:5432/${ORDER_DATASOURCE_DB}
    profiles:
      - prod
    depends_on:
      - zeebe
      - postgres
    networks:
      - internal


networks:
  internal: